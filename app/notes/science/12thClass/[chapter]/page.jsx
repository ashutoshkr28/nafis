"use client";
import { useState } from "react";

const FAQ = () => {
  // Chapter data
  const chapters = [
    {
      chapterName: "рдлрд╕рд▓ рдЙрддреНрдкрд╛рджрди рдПрд╡рдВ рдкреНрд░рдмрдВрдзрди",
      imageUrl: "/image/ashu.png", // ЁЯЦ╝я╕П Image for this chapter
      description: (
        <h1><b style={{color:"blue"}}> рдЗрд╕ рдЕрдзреНрдпрд╛рдп рдореЗрдВ рд╣ рдЙрд░реНрд╡рд░рдХред</b></h1>
       
      ),
      questions: [
        {
          question: "1. рдлрд╕рд▓ рдХрд┐рд╕реЗ рдХрд╣рддреЗ рд╣реИрдВ?",
          answer: (
            <div>
              <b style={{ color: "green" }}>рдЙрддреНрддрд░: </b>
              рдЬрдм рдПрдХ рд╣реА рдХрд┐рд╕реНрдо рдХреЗ рдкреМрдзреЗ рдХрд┐рд╕реА рд╕реНрдерд╛рди рдкрд░ рдмрдбрд╝реЗ рдкреИрдорд╛рдиреЗ рдкрд░ рдЙрдЧрд╛рдП рдЬрд╛рддреЗ рд╣реИрдВ рддреЛ рдЗрд╕реЗ <b style={{ color: 'blue' }}>рдлрд╕рд▓</b> рдХрд╣рддреЗ рд╣реИрдВред
            </div>
          ),
        },
        {
          question: "2. рдЬреБрддрд╛рдИ рдХрд┐рд╕реЗ рдХрд╣рддреЗ рд╣реИрдВ?",
          answer: (
            <div>
              <b style={{ color: "green" }}>рдЙрддреНрддрд░: </b>
              рдорд┐рдЯреНрдЯреА рдХреЛ рдЙрд▓рдЯрдиреЗ-рдкрд▓рдЯрдиреЗ рдПрд╡рдВ рдкреЛрд▓рд╛ рдХрд░рдиреЗ рдХреА рдкреНрд░рдХреНрд░рд┐рдпрд╛ рдХреЛ <b style={{ color: 'blue' }}>рдЬреБрддрд╛рдИ</b> рдХрд╣рддреЗ рд╣реИрдВред
            </div>
          ),
        },
      ],
    },
    {
      chapterName: "рд╕рд┐рдВрдЪрд╛рдИ рдХреЗ рддрд░реАрдХреЗ",
      imageUrl: "/images/sinchai.jpg", // ЁЯЦ╝я╕П Image for this chapter
      description: "рдЗрд╕ рдЕрдзреНрдпрд╛рдп рдореЗрдВ рд╣рдо рд╕рд┐рдВрдЪрд╛рдИ рдХреЗ рд╡рд┐рднрд┐рдиреНрди рддрд░реАрдХреЛрдВ рдФрд░ рдЙрдирдХреЗ рдорд╣рддреНрд╡ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдЬрд╛рдирдХрд╛рд░реА рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВрдЧреЗред",
      questions: [
        {
          question: "рд╕рд┐рдВрдЪрд╛рдИ рдХреЗ рдкрд╛рд░рдореНрдкрд░рд┐рдХ рддрд░реАрдХреЗ рдХреМрди-рдХреМрди рд╕реЗ рд╣реИрдВ?",
          answer: (
            <div>
              <b style={{ color: "green" }}>рдЙрддреНрддрд░: </b>
              рд╕рд┐рдВрдЪрд╛рдИ рдХреЗ рдкрд╛рд░рдореНрдкрд░рд┐рдХ рддрд░реАрдХреЗ рдирд┐рдореНрди рд╣реИрдВ:
              <ul className="list-disc ml-14">
                <li>рдореЛрдЯрд░</li>
                <li>рдЪреЗрди рдкрдореНрдк</li>
                <li>рдврдХрд▓реА</li>
                <li>рд░рд┐рд╣рдЯ</li>
              </ul>
            </div>
          ),
        },
      ],
    },
  ];

  return (
    <div className="max-w-6xl mx-auto px-4 py-12">
      <h1 className="text-3xl font-bold text-center mb-8 text-indigo-700">Frequently Asked Questions</h1>
      {chapters.map((chapter, chapterIndex) => (
        <Chapter
          key={chapterIndex}
          chapter={chapter}
          chapterIndex={chapterIndex + 1} // Add chapter number
        />
      ))}
    </div>
  );
};

// Chapter Component
const Chapter = ({ chapter, chapterIndex }) => {
  const [isOpen, setIsOpen] = useState(false); // State to toggle chapter open/close

  return (
    <div className="border border-gray-300 rounded-lg mb-4">
      {/* Chapter Heading */}
      <h2
        className="text-xl font-semibold bg-indigo-200 px-4 py-2 cursor-pointer"
        onClick={() => setIsOpen(!isOpen)} // Toggle the chapter
      >
        {`рдЕрдзреНрдпрд╛рдп ${chapterIndex}: ${chapter.chapterName}`}
      </h2>

      {/* Show image if chapter is open */}
      {isOpen && chapter.imageUrl && (
        <div className="flex justify-center my-4">
          <img 
            src={chapter.imageUrl} 
            alt={`Image for ${chapter.chapterName}`} 
            className="w-full md:w-1/2 rounded-lg shadow-md" 
          />
        </div>
      )}

      {/* Show description if chapter is open */}
      {isOpen && chapter.description && (
        <div className="px-4 py-2 text-gray-700 text-md">
          <p>{chapter.description}</p>
        </div>
      )}

      {/* Show questions if chapter is open */}
      {isOpen && (
        <div className="px-4 py-2">
          {chapter.questions.map((faq, questionIndex) => (
            <QuestionAnswer key={questionIndex} faq={faq} />
          ))}
        </div>
      )}
    </div>
  );
};

// QuestionAnswer Component
const QuestionAnswer = ({ faq }) => {
  const [isOpen, setIsOpen] = useState(false); // State to toggle Q&A

  return (
    <div className="border-b-2 border-gray-300 pb-8 cursor-pointer">
      <h3 
        className="text-lg font-medium text-red-600 flex justify-between items-center"
        onClick={() => setIsOpen(!isOpen)} // Toggle answer visibility
      >
        {`рдкреНрд░рд╢реНтАНрди: ${faq.question}`}
      </h3>
      {isOpen && <div className="text-gray-600 mt-4">{faq.answer}</div>}
    </div>
  );
};

export default FAQ;
